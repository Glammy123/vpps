name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Install Tailscale via Winget
      shell: pwsh
      run: |
        # Install Tailscale using Windows Package Manager
        winget install --id Tailscale.Tailscale --silent --accept-package-agreements
        if ($LASTEXITCODE -ne 0) {
            Write-Error "Tailscale installation failed with exit code: $LASTEXITCODE"
            exit 1
        }

    - name: Authenticate Tailscale
      shell: pwsh
      run: |
        # Connect to Tailscale with ephemeral node
        tailscale up --authkey=${{ secrets.TAILSCALE_AUTHKEY }} --hostname=gha-runner-${{ github.run_id }} --ephemeral --accept-routes=false --accept-dns=false
      env:
        TAILSCALE_AUTHKEY: ${{ secrets.TAILSCALE_AUTHKEY }}

    - name: Configure RDP Access
      shell: pwsh
      run: |
        # Enable RDP with proper registry path
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        
        # Create temporary admin user (consider using secrets for password in real scenarios)
        $password = ConvertTo-SecureString "P@ssw0rd!" -AsPlainText -Force
        New-LocalUser -Name "runneradmin" -Password $password -AccountNeverExpires
        Add-LocalGroupMember -Group "Administrators" -Member "runneradmin"

    - name: Display Connection Info
      shell: pwsh
      run: |
        $tailscaleIP = (tailscale ip -4)
        Write-Host "`n=== Remote Desktop Connection Information ==="
        Write-Host "IP Address: $tailscaleIP"
        Write-Host "Username: runneradmin"
        Write-Host "Password: P@ssw0rd!"
        Write-Host "`nUse 'tailscale status' to verify connection:"
        tailscale status

    - name: Maintain Session
      shell: pwsh
      run: |
        Write-Host "Session will remain active for 60 minutes..."
        Start-Sleep -Seconds 3600  # 1 hour timeout
      timeout-minutes: 65

    - name: Disconnect Tailscale (Cleanup)
      if: always()
      shell: pwsh
      run: tailscale down
