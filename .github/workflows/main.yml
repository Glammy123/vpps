name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Tailscale (Chocolatey)
      shell: pwsh
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        if (-not (Test-Path "$env:ChocolateyInstall\bin\choco.exe")) {
          Write-Error "Chocolatey installation failed."
          exit 1
        }
        choco install tailscale --yes
        if ($LASTEXITCODE -ne 0) {
            Write-Error "Tailscale installation failed with exit code: $LASTEXITCODE"
            exit 1
        }
        $env:PATH = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
        Write-Host "Refreshed PATH: $($env:PATH)"
        if (-not (Get-Command tailscale -ErrorAction SilentlyContinue)) {
          Write-Error "Tailscale is not found in PATH after installation and refresh."
          exit 1
        }
        Write-Host "Tailscale is found in the PATH."

    - name: Authenticate Tailscale
      shell: pwsh
      run: |
        tailscale up --authkey=${{ secrets.TAILSCALE_AUTHKEY }} --hostname=gha-runner-${{ github.run_id }} --ephemeral --accept-routes=false --accept-dns=false
      env:
        TAILSCALE_AUTHKEY: ${{ secrets.TAILSCALE_AUTHKEY }}

    - name: Configure RDP Access
      shell: pwsh
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        $password = ConvertTo-SecureString "${{ secrets.RDP_PASSWORD }}" -AsPlainText -Force
        New-LocalUser -Name "runneradmin" -Password $password -AccountNeverExpires -Description "Temporary admin user for RDP access" | Out-Null
        Add-LocalGroupMember -Group "Administrators" -Member "runneradmin"

    - name: Display Connection Info
      shell: pwsh
      run: |
        $tailscaleIP = (tailscale ip -4)
        Write-Host "`n=== Remote Desktop Connection Information ==="
        Write-Host "IP Address: $tailscaleIP"
        Write-Host "Username: runneradmin"
        Write-Host "Password:  <Use RDP client to enter password>"
        Write-Host "`nUse 'tailscale status' to verify connection:"
        tailscale status

    - name: Maintain Session
      shell: pwsh
      run: |
        Write-Host "Session will remain active for 60 minutes..."
        Start-Sleep -Seconds 3600
      timeout-minutes: 65

    - name: Disconnect Tailscale and Cleanup (Cleanup)
      if: always()
      shell: pwsh
      run: |
        tailscale down
        try {
          Remove-LocalUser -Name "runneradmin" -ErrorAction Stop
        }
        catch {
          Write-Warning "Failed to remove user: $($_.Exception.Message)"
        }
